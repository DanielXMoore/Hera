# See ECMA-262 Standard: 15.10.1
# https://262.ecma-international.org/5.1/#sec-15.10
#
Pattern
  Disjunction

Disjunction
  Alternative ( "|" Alternative )*

Alternative
  Term*

Term
  ( Assertion / Atom ) Quantifier? # (see https://github.com/jviereck/regjsparser/issues/130)

Assertion
  "^"
  "$"
  "\\b"
  "\\B"
  "(?="  Disjunction ")"
  "(?!"  Disjunction ")"
  "(?<=" Disjunction ")"
  "(?<!" Disjunction ")"

Quantifier
  QuantifierPrefix "?"?

QuantifierPrefix
  [*+?]
  "{" DecimalDigits ( "," DecimalDigits )? ","? "}"

Atom
  PatternCharacter
  "."
  "\\" AtomEscape
  CharacterClass
  "(" GroupSpecifier Disjunction ")"
  "(" "?" ":" Disjunction ")"

PatternCharacter
  [^^$\.*+?()\[\]{}|] # SourceCharacter # but not one of: ^ $ \ . * + ? ( ) [ ] { } |

AtomEscape
  DecimalEscape
  CharacterClassEscape
  CharacterEscape
  "k" GroupName

CharacterEscape
  ControlEscape
  "c" ControlLetter
  HexEscapeSequence
  UnicodeEscapeSequence
  IdentityEscape

ControlEscape
  [fnrtv]

ControlLetter
  [a-zA-Z]

HexEscapeSequence
  "x" HexDigit HexDigit

UnicodeEscapeSequence
  "u" HexDigit HexDigit HexDigit HexDigit

HexDigit
  [0-9a-fA-F]

IdentityEscape
  . # but not c

DecimalEscape
  [\d]+ # [lookahead ∉ DecimalDigit]

CharacterClassEscape
  [dDsSwW]

CharacterClass
  "[" "^"? ClassRanges "]"

ClassRanges
  NonemptyClassRanges
  ClassContents
  "" # Empty

NonemptyClassRanges
  ClassAtom "-" ClassAtom ClassRanges
  ClassAtom NonemptyClassRangesNoDash
  ClassAtom

NonemptyClassRangesNoDash
  ClassAtomNoDash "-" ClassAtom ClassRanges
  ClassAtomNoDash NonemptyClassRangesNoDash
  ClassAtom

ClassAtom
  "-"
  ClassAtomNoDash

ClassAtomNoDash
  "\\" ClassEscape
  [^\\\]-] # SourceCharacter but not one of \ or ] or -

ClassEscape
  DecimalEscape
  "b"
  CharacterEscape
  CharacterClassEscape

GroupSpecifier
  "?" GroupName
  "" # Empty

GroupName
  "<" RegExpIdentifierName ">"

RegExpIdentifierName
  RegExpIdentifierStart RegExpIdentifierContinue*

RegExpIdentifierStart
  /\p{ID_Start}/
  "$"
  "_"
  "\\" UnicodeEscapeSequence

RegExpIdentifierContinue
  /\p{ID_Continue}/
  "$"
  "_"
  "\\" UnicodeEscapeSequence
  [\u200C\u200D]

# NOTE: The following productions refer to the "set notation and
# properties of strings" proposal.
# https://github.com/tc39/proposal-regexp-set-notation

ClassContents
  ClassUnion
  ClassIntersection
  ClassSubtraction

ClassUnion
  ClassRange ClassUnion?
  ClassOperand ClassUnion?

ClassIntersection
  ClassOperand "&&" [lookahead ≠ &] ClassOperand
  ClassIntersection "&&" [lookahead ≠ &] ClassOperand

ClassSubtraction
  ClassOperand "--" ClassOperand
  ClassSubtraction "--" ClassOperand

ClassOperand
  ClassCharacter
  ClassStrings
  NestedClass

NestedClass
  "[" "^"? ClassRanges "]"
  "\\" CharacterClassEscape

ClassRange
  ClassCharacter "-" ClassCharacter

ClassCharacter
  [lookahead ∉ ClassReservedDouble] SourceCharacter but not ClassSyntaxCharacter
  "\\" CharacterEscape
  "\\" ClassHalfOfDouble
  "\\" "b"

ClassSyntaxCharacter
  [()\[\]{}/\\|-]

ClassStrings
  "(" ClassString MoreClassStrings? ")"

MoreClassStrings
  "|" ClassString MoreClassStrings?

ClassString
  NonEmptyClassString
  "" # Empty

NonEmptyClassString
  ClassCharacter NonEmptyClassString?

ClassReservedDouble
  "&&"
  "!!"
  "##"
  "$$"
  "%%"
  "**"
  "++"
  ",,"
  ".."
  "::"
  ";;"
  "<<"
  "=="
  ">>"
  "??"
  "@@"
  "^^"
  "__"
  "``"
  "~~"

ClassHalfOfDouble
  [-&!#%,:;<=>@_`~]

# NOTE: The following productions refer to the
# "Regular Expression Pattern Modifiers for ECMAScript" proposal.
# https://github.com/tc39/proposal-regexp-modifiers

Atom
  "(" "?" RegularExpressionFlags ":" Disjunction ")"
  "(" "?" RegularExpressionFlags "-" RegularExpressionFlags ":" Disjunction ")"
