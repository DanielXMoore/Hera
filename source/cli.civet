#!/usr/bin/env node

{ compile, parse, grammarToEBNF } from ./main.civet
encoding := "utf8"
fs from fs

input := fs.readFileSync process.stdin.fd, encoding
ast := parse input

if process.argv.includes '--ast'
  process.stdout.write JSON.stringify(ast, null, 2)
  process.exit 0

if process.argv.includes '--ebnf'
  process.stdout.write grammarToEBNF(ast)
  process.exit 0

filename .= "<stdin>"
try
  filename = fs.realpathSync '/dev/stdin'

getOptValue := (opt: string) ->
  index := process.argv.indexOf opt
  if index > -1
    process.argv[index + 1]

process.stdout.write compile ast,
  types:     process.argv.includes '--types'
  inlineMap: process.argv.includes '--inlineMap'
  filename: filename
  source: input
  libPath: getOptValue('--libPath')

// Write out cli io
if process.argv.includes '--cli'
  process.stdout.write """


    if (require.main === module) {
      const encoding = "utf8"
      const fs = require("fs")

      const input = fs.readFileSync(process.stdin.fd, encoding)
      const ast = parse(input)

      process.stdout.write(JSON.stringify(ast, null, 2))
    }
  """
